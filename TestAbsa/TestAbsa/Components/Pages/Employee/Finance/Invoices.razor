@page "/employee/finance/invoices"
@rendermode InteractiveServer
@using TestAbsa.Data.Models
@using TestAbsa.Services
@inject IFinanceService FinanceService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Manage Invoices</PageTitle>

<div class="container-fluid">
    <!-- Header with Back Button -->
    <div class="row mb-4">
        <div class="col">
            <NavLink class="btn btn-primary mt-3" href="/employee/finance/dashboard">
                ← 
            </NavLink>
            <h2>Invoice Management</h2>
            <p class="text-muted">Create, send, and track customer invoices</p>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (errorMessage != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @errorMessage
            <button type="button" class="btn-close" @onclick="@(() => errorMessage = null)"></button>
        </div>
    }
    else
    {
        <div class="row">
            <!-- Sidebar with Actions -->
            <div class="col-md-4">
                <!-- Quick Actions Card -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Quick Actions</h5>
                    </div>
                    <div class="card-body d-grid gap-2">
                        <NavLink class="btn btn-primary" href="/employee/finance/create-invoice">
                            📝 Create Invoice
                        </NavLink>
                        <NavLink class="btn btn-outline-primary" href="/employee/finance/manage-customers">
                            👥 Manage Customers
                        </NavLink>
                    </div>
                </div>

                <!-- Statistics Card -->
                <div class="card">
                    <div class="card-header">
                        <h5>Invoice Statistics</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <small class="text-muted">Total Invoices</small>
                            <h4>@invoices.Count</h4>
                        </div>
                        <div class="mb-3">
                            <small class="text-muted">Draft Invoices</small>
                            <h4>@draftInvoicesCount</h4>
                        </div>
                        <div class="mb-3">
                            <small class="text-muted">Sent Invoices</small>
                            <h4>@sentInvoicesCount</h4>
                        </div>
                        <div class="mb-3">
                            <small class="text-muted">Paid Invoices</small>
                            <h4>@paidInvoicesCount</h4>
                        </div>
                        <div>
                            <small class="text-muted">Total Revenue</small>
                            <h4 class="text-success">R @totalRevenue.ToString("N2")</h4>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-8">
                <!-- Invoices List -->
                <div class="card">
                    <div class="card-header">
                        <h5>All Invoices</h5>
                    </div>
                    <div class="card-body">
                        @if (invoices.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Invoice #</th>
                                            <th>Customer</th>
                                            <th>Date</th>
                                            <th>Due Date</th>
                                            <th>Amount</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var invoice in invoices)
                                        {
                                            <tr>
                                                <td>
                                                    <strong>@invoice.InvoiceNumber</strong>
                                                </td>
                                                <td>@(invoice.Customer?.Name ?? "No Customer")</td>
                                                <td>@invoice.CreatedDate.ToString("yyyy-MM-dd")</td>
                                                <td>@(invoice.DueDate?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                                                <td>R @invoice.TotalAmount.ToString("N2")</td>
                                                <td>
                                                    <span class="badge bg-@GetStatusColor(invoice.Status)">
                                                        @invoice.Status
                                                    </span>
                                                </td>
                                                <td>
                                                    <button class="btn btn-sm btn-info" 
                                                            type="button"
                                                            @onclick="@(() => ViewInvoice(invoice.Id))">
                                                        👁️ View
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-secondary ms-1" 
                                                            type="button"
                                                            @onclick="@(() => DownloadInvoicePdf(invoice.Id))">
                                                        📄 PDF
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <!-- Empty State -->
                            <div class="text-center py-5">
                                <div class="mb-4">
                                    <div style="font-size: 4rem; color: #6c757d;">📄</div>
                                </div>
                                <h4>No Invoices Yet</h4>
                                <p class="text-muted mb-4">
                                    You haven't created any invoices yet. Start by creating your first invoice.
                                </p>
                                <NavLink class="btn btn-primary" href="/employee/finance/create-invoice">
                                    Create Your First Invoice
                                </NavLink>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Invoice Details Modal -->
@if (showInvoiceModal && selectedInvoice != null)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Invoice Details - @selectedInvoice.InvoiceNumber</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <!-- Invoice Header Info -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h6 class="text-muted">Invoice Information</h6>
                            <p class="mb-1"><strong>Invoice #:</strong> @selectedInvoice.InvoiceNumber</p>
                            <p class="mb-1"><strong>Status:</strong> 
                                <span class="badge bg-@GetStatusColor(selectedInvoice.Status)">
                                    @selectedInvoice.Status
                                </span>
                            </p>
                            <p class="mb-1"><strong>Created:</strong> @selectedInvoice.CreatedDate.ToString("yyyy-MM-dd")</p>
                            <p class="mb-1"><strong>Due Date:</strong> @(selectedInvoice.DueDate?.ToString("yyyy-MM-dd") ?? "Not set")</p>
                            @if (selectedInvoice.PaidDate.HasValue)
                            {
                                <p class="mb-1"><strong>Paid Date:</strong> @selectedInvoice.PaidDate.Value.ToString("yyyy-MM-dd")</p>
                            }
                        </div>
                        <div class="col-md-6">
                            <h6 class="text-muted">Customer Information</h6>
                            @if (selectedInvoice.Customer != null)
                            {
                                <p class="mb-1"><strong>Name:</strong> @selectedInvoice.Customer.Name</p>
                                <p class="mb-1"><strong>Email:</strong> @selectedInvoice.Customer.Email</p>
                                <p class="mb-1"><strong>Phone:</strong> @selectedInvoice.Customer.Phone</p>
                            }
                            else
                            {
                                <p class="text-muted">No customer information available</p>
                            }
                        </div>
                    </div>

                    <!-- Invoice Items -->
                    <h6 class="text-muted mb-3">Invoice Items</h6>
                    @if (selectedInvoice.InvoiceItems != null && selectedInvoice.InvoiceItems.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead class="table-light">
                                    <tr>
                                        <th>Description</th>
                                        <th style="width: 100px;">Quantity</th>
                                        <th style="width: 120px;">Unit Price</th>
                                        <th style="width: 120px;">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in selectedInvoice.InvoiceItems)
                                    {
                                        <tr>
                                            <td>@item.Description</td>
                                            <td class="text-center">@item.Quantity</td>
                                            <td class="text-end">R @item.UnitPrice.ToString("N2")</td>
                                            <td class="text-end">R @item.Total.ToString("N2")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="fw-bold">
                                        <td colspan="3" class="text-end">Total Amount:</td>
                                        <td class="text-end text-primary">R @selectedInvoice.TotalAmount.ToString("N2")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No items in this invoice.</p>
                    }

                    <!-- Notes -->
                    @if (!string.IsNullOrWhiteSpace(selectedInvoice.Notes))
                    {
                        <div class="mt-4">
                            <h6 class="text-muted">Notes</h6>
                            <p class="border rounded p-3 bg-light">@selectedInvoice.Notes</p>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="@(() => DownloadInvoicePdf(selectedInvoice.Id))">
                        📄 Download PDF
                    </button>
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private bool isLoading = true;
    private string? errorMessage;
    
    private List<Invoice> invoices = new();
    
    private int draftInvoicesCount = 0;
    private int sentInvoicesCount = 0;
    private int paidInvoicesCount = 0;
    private decimal totalRevenue = 0;

    // Modal state
    private bool showInvoiceModal = false;
    private Invoice? selectedInvoice = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadInvoicesData();
    }

    private async Task LoadInvoicesData()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            StateHasChanged();

            invoices = await FinanceService.GetAllInvoicesAsync();

            draftInvoicesCount = invoices.Count(i => i.Status == InvoiceStatus.Draft);
            sentInvoicesCount = invoices.Count(i => i.Status == InvoiceStatus.Sent);
            paidInvoicesCount = invoices.Count(i => i.Status == InvoiceStatus.Paid);

            totalRevenue = invoices.Where(i => i.Status == InvoiceStatus.Paid)
                                   .Sum(i => i.TotalAmount);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading invoices: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task ViewInvoice(int invoiceId)
    {
        try
        {
            selectedInvoice = await FinanceService.GetInvoiceByIdAsync(invoiceId);
            if (selectedInvoice != null)
            {
                showInvoiceModal = true;
            }
            else
            {
                errorMessage = "Invoice not found.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading invoice: {ex.Message}";
        }
    }

    private void CloseModal()
    {
        showInvoiceModal = false;
        selectedInvoice = null;
    }

    private async Task DownloadInvoicePdf(int invoiceId)
    {
        try
        {
            var pdfBytes = await FinanceService.GenerateInvoicePdfAsync(invoiceId);
            
            // JS Interop to download the PDF
            await JS.InvokeVoidAsync("BlazorDownloadFile", $"Invoice_{invoiceId}.pdf", "application/pdf", pdfBytes);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error generating PDF: {ex.Message}";
        }
    }

    private string GetStatusColor(InvoiceStatus status) => status switch
    {
        InvoiceStatus.Draft => "secondary",
        InvoiceStatus.Sent => "info",
        InvoiceStatus.Paid => "success",
        InvoiceStatus.Overdue => "danger",
        InvoiceStatus.Cancelled => "dark",
        _ => "secondary"
    };
}